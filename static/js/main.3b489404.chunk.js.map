{"version":3,"sources":["pages/logo.png","services/api.js","pages/form.js","pages/main.js","pages/edit.js","pages/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","api","axios","create","baseURL","Form","history","useState","values","setValues","boolean","id","name","event","a","preventDefault","post","lead","push","console","log","handleInputChange","persist","target","value","className","AppBar","Tabs","centered","to","Tab","label","onSubmit","placeholder","onChange","required","email","phone","avatar","responsible","projectArea","disabled","selected","map","portfolio","key","numberOfEmployees","segment","howItArrived","demandChannels","decisionMaker","knowsAboutCPE","details","type","Main","leads","setLeads","useEffect","get","response","data","loadLeads","_id","src","alt","status","returnDate","moment","calendar","Edit","match","params","put","user","loadLead","Index","Routes","path","component","require","config","App","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b489404.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.509ef956.png\";","import axios from 'axios';\r\n\r\nconst api = axios.create({ \r\n    baseURL: 'http://localhost:3333'\r\n }); \r\n\r\n export default api;","import React, { useState } from 'react';\r\nimport './form.css';\r\nimport api from '../services/api';\r\nimport logo from './logo.png';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Form({ history }) {\r\n    const [values, setValues] = useState({});\r\n\r\n    const demandChannels = [\r\n        { id: 1, name: 'Desconhecido' },\r\n        { id: 2, name: 'Google' },\r\n        { id: 3, name: 'Instagram' },\r\n        { id: 4, name: 'UFMG' },\r\n        { id: 5, name: 'Cliente Antigo' },\r\n        { id: 6, name: 'Indicação' },\r\n        { id: 7, name: 'Prospecção ativa' },\r\n        { id: 8, name: 'LinkedIn' },\r\n        { id: 9, name: 'WhatsApp' },\r\n        { id: 10, name: 'Facebook' },\r\n      ];\r\n\r\n      const portfolio = [\r\n        { id: 1, name: 'APP' },\r\n        { id: 2, name: 'ELT' },\r\n        { id: 3, name: 'FV' },\r\n        { id: 4, name: 'PE' },\r\n        { id: 5, name: 'WEB' },\r\n      ];\r\n\r\n      const boolean = [\r\n        { id: true, name: 'Sim' },\r\n        { id: false, name: 'Não' },\r\n      ];\r\n\r\n    async function handleSubmit(event){\r\n        try {\r\n            event.preventDefault();\r\n            const response = await api.post('/', { lead: values });\r\n            history.push(`/leads`);\r\n        }\r\n        catch(error){\r\n            console.log('erro ao carregar a proxima pagina');\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    function handleInputChange(event) {\r\n        event.persist();\r\n        setValues(values => ({\r\n            ...values,\r\n            [event.target.name]: event.target.value\r\n        }));\r\n        console.log(values.name);\r\n    }\r\n\r\n    return(\r\n        <div className=\"form-container\">\r\n            <AppBar>\r\n                <Tabs value=\"new-tab\" className=\"Tab\" centered>\r\n                    <Link value=\"new-tab\" to=\"/new\" className=\"main-link\"><Tab value=\"new-tab\" label=\"Cadastro de lead\" className=\"NavTabs\" /></Link>\r\n                    <Link value=\"leads-tab\" to=\"/leads\" className=\"main-link\"><Tab value=\"leads-tab\" label=\"Lista de leads\" className=\"NavTabs\" /></Link>\r\n                    <Link value=\"main-tab\" to=\"/main\" className=\"main-link\"><Tab value=\"main-tab\" label=\"Leads novos\" className=\"NavTabs\" /></Link>\r\n                </Tabs>\r\n            </AppBar>\r\n            <h1>Cadastro de Leads/Clientes</h1>\r\n            <form onSubmit={ handleSubmit }>\r\n                <main>\r\n                <section className=\"box\">\r\n                    <input\r\n                        placeholder=\"Nome\"\r\n                        value={ values.name }\r\n                        name=\"name\"\r\n                        onChange = {handleInputChange}  \r\n                        required\r\n                    />\r\n                    <input\r\n                        placeholder=\"E-mail\"\r\n                        value={ values.email }\r\n                        name=\"email\"\r\n                        onChange = {handleInputChange} \r\n                        required\r\n                    />\r\n                        {/* <p>{values.email}</p> */}\r\n                    <input\r\n                        placeholder=\"Telefone\"\r\n                        value={ values.phone }\r\n                        name=\"phone\"\r\n                        onChange = {handleInputChange}  \r\n                        required\r\n                    />\r\n                    {/* <p>{values.phone}</p> */}\r\n                    <input\r\n                        placeholder=\"Link pra foto\"\r\n                        value={ values.avatar }\r\n                        name=\"avatar\"\r\n                        onChange = {handleInputChange}  \r\n                    />\r\n                    {/* <img src={values.avatar} alt={values.name} /> */}\r\n                    <input\r\n                        placeholder=\"Responsável pelo lead\"\r\n                        value={ values.responsible }\r\n                        name=\"responsible\"\r\n                        onChange = {handleInputChange} \r\n                    />\r\n                    <select \r\n                        value= { values.projectArea }\r\n                        name=\"projectArea\"\r\n                        onChange = {handleInputChange} \r\n                        required\r\n                    >\r\n\r\n                        <option value=\"\" disabled selected>-- Área do portfólio --</option>\r\n                        {portfolio.map(portfolio => (\r\n                            <option key={portfolio.id} value={portfolio.name}>\r\n                                {portfolio.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\t\r\n                </section>\r\n\r\n                <section className=\"box\">\r\n                    <input\r\n                        placeholder=\"Número de funcionários\"\r\n                        value={ values.numberOfEmployees }\r\n                        name=\"numberOfEmployees\"\r\n                        onChange = {handleInputChange}  \r\n                        />\r\n                    <input\r\n                        placeholder=\"Segmento\"\r\n                        value={ values.segment }\r\n                        name=\"segment\"\r\n                        onChange = {handleInputChange} \r\n                        />\r\n\r\n                    <select \r\n                        placeholder=\"Como chegou\"\r\n                        value= { values.howItArrived }\r\n                        name=\"howItArrived\"\r\n                        onChange = {handleInputChange} \r\n                        required\r\n                    >\r\n                    <option value=\"\" disabled selected>-- Como chegou --</option>\r\n                        {demandChannels.map(demandChannels => (\r\n                            <option key={demandChannels.id} value={demandChannels.name}>\r\n                                {demandChannels.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\t\r\n                    <select \r\n                        value= { values.decisionMaker }\r\n                        name=\"decisionMaker\"\r\n                        onChange = {handleInputChange} \r\n                    >\r\n                        <option value=\"\" disabled selected>-- Tomador de decisão? --</option>\r\n                        {boolean.map(boolean => (\r\n                            <option key={boolean.id} value={boolean.id}>\r\n                                {boolean.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <select \r\n                        value= { values.knowsAboutCPE }\r\n                        name=\"knowsAboutCPE\"\r\n                        onChange = {handleInputChange} \r\n                    >\r\n                        <option value=\"\" disabled selected>-- Conhece o MEJ, como a CPE funciona, etc? --</option>\r\n                        {boolean.map(boolean => (\r\n                            <option key={boolean.id} value={boolean.id}>\r\n                                {boolean.name}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <textarea\r\n                        placeholder=\"Detalhes\"\r\n                        value={ values.details }\r\n                        name=\"details\"\r\n                        onChange = {handleInputChange}  \r\n                    />\t\r\n                    </section>\r\n                    </main>\r\n                <button type=\"submit\">Enviar</button>\r\n                {/* <img src={logo} class=\"logo\"/> */}\r\n            </form>\r\n        </div>\r\n    );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './main.css';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport moment from 'moment'\r\nimport 'moment/locale/pt-br'\r\nimport StarIcon from '@material-ui/icons/Star';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\n\r\nexport default function Main( history ) {\r\n    const [leads, setLeads] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function loadLeads() {\r\n            const response = await api.get('/attentionLeads', {\r\n            })\r\n            setLeads(response.data);\r\n        }\r\n        loadLeads();\r\n    }); \r\n    \r\n    return(\r\n        <div className=\"main-container\">\r\n            <AppBar>\r\n                <Tabs value=\"main-tab\" className=\"Tab\" centered>\r\n                    <Link value=\"new-tab\" to=\"/new\" className=\"main-link\"><Tab value=\"new-tab\" label=\"Cadastro de lead\" className=\"NavTabs\" /></Link>\r\n                    <Link value=\"leads-tab\" to=\"/leads\" className=\"main-link\"><Tab value=\"leads-tab\" label=\"Lista de leads\" className=\"NavTabs\" /></Link>\r\n                    <Link value=\"main-tab\" to=\"/main\" className=\"main-link\"><Tab value=\"main-tab\" label=\"Leads novos\" className=\"NavTabs\" /></Link>\r\n                </Tabs>\r\n            </AppBar>\r\n            <h1>Leads saindo do forno</h1>\r\n            <ul>\r\n                {leads.map(lead => (\r\n                    <li key={lead._id}>\r\n                        <img src={lead.avatar} alt={lead.name} />\r\n                        <footer>\r\n                            <strong>{lead.name}</strong>\r\n                            <p className=\"status-badge\">{lead.status}</p>\r\n                            { (lead.returnDate != null) \r\n                                    ? <p className=\"status-badge\">{moment(lead.returnDate).calendar()}</p>\r\n                                    : ''\r\n                                }\r\n                            <p>oi</p>\r\n                            <p>{lead.details}</p>\r\n                        </footer>\r\n                        <div className=\"buttons\">\r\n                            <button type=\"button\" className=\"card-button\">\r\n                                Qualificação: <p>\r\n                                { lead.decisionMaker \r\n                                    ? <StarIcon />\r\n                                    : ''\r\n                                }\r\n                                { (lead.numberOfEmployees < 10)\r\n                                    ? <StarIcon />\r\n                                    : ''\r\n                                }\r\n                                { lead.knowsAboutCPE\r\n                                    ? <StarIcon />\r\n                                    : ''\r\n                                }\r\n                                </p>\r\n                            </button>\r\n                            <button type=\"button\" className=\"card-button\">\r\n                                <Link to={`/edit/${lead._id}`} className=\"main-link\">\r\n                                    Editar\r\n                                </Link>\r\n                            </button>\r\n                        </div>\r\n                    </li>\r\n                ))} \r\n            </ul>  \r\n        </div>\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport api from '../services/api';\r\nimport './edit.css';\r\nimport moment from 'moment'\r\nimport 'moment/locale/pt-br'\r\n\r\nexport default function Edit( { match, history } ) {\r\n    const [values, setValues] = useState({});\r\n    const id = match.params.id;\r\n\r\n    const portfolio = [\r\n        { id: 1, name: 'APP' },\r\n        { id: 2, name: 'ELT' },\r\n        { id: 3, name: 'FV' },\r\n        { id: 4, name: 'PE' },\r\n        { id: 5, name: 'WEB' },\r\n      ];\r\n\r\n    const status = [\r\n        { id: 1, name: 'Não iniciado' },\r\n        { id: 2, name: 'Retornar' },\r\n        { id: 3, name: 'Em progresso' },\r\n        { id: 4, name: 'Assinado' },\r\n        { id: 5, name: 'Cancelado' },\r\n    ];\r\n\r\n    const demandChannels = [\r\n        { id: 1, name: 'Desconhecido' },\r\n        { id: 2, name: 'Google' },\r\n        { id: 3, name: 'Instagram' },\r\n        { id: 4, name: 'UFMG' },\r\n        { id: 5, name: 'Cliente Antigo' },\r\n        { id: 6, name: 'Indicação' },\r\n        { id: 7, name: 'Prospecção ativa' },\r\n        { id: 8, name: 'LinkedIn' },\r\n        { id: 9, name: 'WhatsApp' },\r\n        { id: 10, name: 'Facebook' },\r\n    ];\r\n\r\n    const boolean = [\r\n        { id: true, name: 'Sim' },\r\n        { id: false, name: 'Não' },\r\n      ];\r\n\r\n    useEffect(() => {\r\n        async function loadLead() {\r\n            const response = await api.get(`/user/${id}`);\r\n            setValues(response.data);\r\n        }\r\n        loadLead();\r\n    }, [match.params._id]); \r\n\r\n    function handleInputChange(event) {\r\n        event.persist();\r\n        setValues(values => ({\r\n            ...values,\r\n            [event.target.name]: event.target.value\r\n        }));\r\n            // console.log(values.name);\r\n            // console.log(event.target.name);\r\n            // console.log(event.target);\r\n            // console.log(values);\r\n    }\r\n\r\n    async function handleSubmit(event){\r\n        try {\r\n            event.preventDefault();\r\n            \r\n            const response = await api.put(`/update/${id}`, { user: values });\r\n            console.log(values);\r\n            console.log('clique')\r\n            // console.log(response);\r\n            history.push(`/leads`);\r\n        }\r\n        catch(error){\r\n            console.log('erro ao carregar a proxima pagina');\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"edit-container\">\r\n            <h1>Editar Lead</h1>\r\n            <form onSubmit={ handleSubmit }>\r\n                <section className=\"avatar-box\">\r\n                    <img src= { values.avatar } alt=\"avatar\" />\r\n                    <input \r\n                            type=\"text\" \r\n                            name=\"avatar\"\r\n                            value={ values.avatar } \r\n                            onChange = { handleInputChange }   \r\n                        />\r\n                </section>\r\n                <section className=\"box\">\r\n                    <p>Nome</p>\r\n                    <input \r\n                        id=\"name\" \r\n                        type=\"text\" \r\n                        name=\"name\"\r\n                        value={ values.name } \r\n                        onChange = { handleInputChange }   \r\n                    />\r\n\r\n                    <p>E-mail</p>\r\n                    <input \r\n                        id=\"email\" \r\n                        name=\"email\"\r\n                        type=\"text\" \r\n                        value={values.email} \r\n                        onChange = {handleInputChange}  \r\n                    />\r\n                    <p>Telefone</p>\r\n                    <input \r\n                        id=\"phone\" \r\n                        name=\"phone\"\r\n                        type=\"text\"\r\n                        value={values.phone} \r\n                        onChange = {handleInputChange} />\r\n                    <p>Área do Portfólio</p>\r\n                    <select \r\n                        value= { values.projectArea }\r\n                        name=\"projectArea\"\r\n                        onChange = {handleInputChange}\r\n                    >\r\n                        {portfolio.map(portfolio => (\r\n                            <option \r\n                            key={ portfolio.id }\r\n                            value={ portfolio.name }>\r\n                                { portfolio.name }\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <p>Como chegou</p>\r\n                    <select \r\n                        value= { values.howItArrived }\r\n                        name=\"howItArrived\"\r\n                        onChange = {handleInputChange}\r\n                    >\r\n                        {demandChannels.map(demandChannels => (\r\n                            <option \r\n                            key={ demandChannels.id }\r\n                            value={ demandChannels.name }>\r\n                                { demandChannels.name }\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                </section>\r\n                <section className=\"box\">\r\n                    <p>Tomador de decisão?</p>\r\n                    <select \r\n                        value= { values.decisionMaker }\r\n                        name=\"decisionMaker\"\r\n                        onChange = { handleInputChange }\r\n                    >\r\n                        {boolean.map(boolean => (\r\n                            <option \r\n                            key={ boolean.id }\r\n                            value={ boolean.id }>\r\n                                { boolean.name }\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <p>Conhece MEJ, EJ...?</p>\r\n                    <select \r\n                        value= { values.knowsAboutCPE }\r\n                        name=\"knowsAboutCPE\"\r\n                        onChange = { handleInputChange }\r\n                    >\r\n                        {boolean.map(boolean => (\r\n                            <option \r\n                            key={ boolean.id }\r\n                            value={ boolean.id }>\r\n                                { boolean.name }\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <p>Segmento</p>\r\n                    <input \r\n                        name=\"segment\" \r\n                        type=\"text\" \r\n                        value={ values.segment } \r\n                        onChange = { handleInputChange }\r\n                    />\r\n                    <p>Responsável pelo Lead</p>\r\n                    <input \r\n                        name=\"responsible\" \r\n                        type=\"text\" \r\n                        value={ values.responsible } \r\n                        onChange = { handleInputChange }\r\n                    />\r\n                    <p>Detalhes</p>\r\n                    <textarea \r\n                        name=\"details\" \r\n                        type=\"text\" \r\n                        value={ values.details } \r\n                        onChange = { handleInputChange }\r\n                    />\r\n                </section>\r\n                <section className=\"box\">\r\n                    <p>Data de retorno</p>\r\n                    <input \r\n                        name=\"returnDate\" \r\n                        type=\"date\" \r\n                        value={values.returnDate}\r\n                        onChange = { handleInputChange }\r\n                    />\r\n                    <p>Número de pessoas na empresa</p>\r\n                    <input \r\n                        name=\"numberOfEmployees\" \r\n                        type=\"text\" \r\n                        value={ values.numberOfEmployees } \r\n                        onChange = { handleInputChange }\r\n                    />\r\n                    <p>Status</p>\r\n                    <select \r\n                        value= { values.status }\r\n                        name=\"status\"\r\n                        onChange = { handleInputChange }\r\n                    >\r\n                        {status.map(status => (\r\n                            <option \r\n                            key={ status.id }\r\n                            value={ status.name }>\r\n                                { status.name }\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <button type=\"submit\">Enviar</button>\r\n                </section>\r\n            </form>\r\n        </div>\r\n        );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport './index.css';\r\nimport moment from 'moment'\r\nimport 'moment/locale/pt-br'\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../services/api';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport StarIcon from '@material-ui/icons/Star';\r\n\r\n\r\nexport default function Index( history ) {\r\n    const [leads, setLeads] = useState([]);\r\n\r\n    useEffect(() => {\r\n        async function loadLeads() {\r\n            const response = await api.get('/index', {\r\n            })\r\n            setLeads(response.data);\r\n        }\r\n        loadLeads();\r\n    });\r\n    \r\n    return(\r\n        <div className=\"index-container\">\r\n            <AppBar>\r\n                <Tabs value=\"leads-tab\" className=\"Tab\" centered>\r\n                    <Link value=\"new-tab\" to=\"/new\" className=\"index-link\"><Tab value=\"new-tab\" label=\"Cadastro de lead\" className=\"NavTabs\" /></Link>\r\n                    <Link value=\"leads-tab\" to=\"/leads\" className=\"index-link\"><Tab value=\"leads-tab\" label=\"Lista de leads\" className=\"NavTabs\" /></Link>\r\n                    <Link value=\"main-tab\" to=\"/main\" className=\"index-link\"><Tab value=\"main-tab\" label=\"Leads novos\" className=\"NavTabs\" /></Link>\r\n                </Tabs>\r\n            </AppBar>\r\n            <h1>Lista de Leads</h1>\r\n            <ul>\r\n                {leads.map(lead => ( /* map:serve pra percorrer um array e retornar algo */\r\n                    <li key={lead._id}>\r\n                        <img src={lead.avatar} alt={lead.name} />\r\n                        <footer>\r\n                            <strong>{lead.name}</strong>\r\n                            <p className=\"status-badge\">{lead.status}</p>\r\n                            { (lead.returnDate != null) \r\n                                    ? <p className=\"status-badge\">{moment(lead.returnDate).calendar()}</p>\r\n                                    : ''\r\n                                }\r\n                            <p>{lead.details}</p>\r\n                        </footer>\r\n                        <div className=\"buttons\">\r\n                            <button type=\"button\" className=\"card-button\">\r\n                                Qualificação: <p>\r\n                                { lead.decisionMaker \r\n                                    ? <StarIcon />\r\n                                    : ''\r\n                                }\r\n                                { (lead.numberOfEmployees < 10)\r\n                                    ? <StarIcon />\r\n                                    : ''\r\n                                }\r\n                                { lead.knowsAboutCPE\r\n                                    ? <StarIcon />\r\n                                    : ''\r\n                                }\r\n                                </p>\r\n                            </button>\r\n                            <button className=\"card-button\">\r\n                                <Link to={`/edit/${lead._id}`} className=\"index-link\">\r\n                                    Editar\r\n                                </Link>\r\n                            </button>\r\n                        </div>\r\n                    </li>\r\n                ))} \r\n            </ul>  \r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport Form from './pages/form';\r\nimport Main from './pages/main';\r\nimport Edit from './pages/edit';\r\nimport Index from './pages/index';\r\n\r\nexport default function Routes(){\r\n    return(\r\n        <BrowserRouter>\r\n            {/* <Route path=\"/\" exact component={ Form } /> */}\r\n            <Route path=\"/new\" component={ Form } />\r\n            <Route path=\"/main\" component={ Main } /> \r\n            <Route path=\"/leads\" component={ Index } />\r\n            <Route path={\"/edit/:id\"} component={ Edit } /> \r\n        </BrowserRouter>\r\n    );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Routes from './routes.js';\r\nrequire('dotenv').config();\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Routes />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}